import * as React from "react";
import { CSSProps } from "../theme";
/**
 * @typedef Button.ButtonThemeProps
 * @property {string} [disabledColor]
 * @property {boolean} [lightHover]
 */
export interface ButtonThemeProps extends Partial<CSSProps> {
    disabledColor?: string;
    lightHover?: boolean;
}
/**
 * Properties of the Button
 * @typedef ButtonProps
 * @property {string} [className] - An additional class name for the button component
 * @property {boolean} [disabled] - If set, it disables the button
 * @property {Function} [onClick] - An handler for the button click
 * @property {React.FocusEventHandler.<any>} [onBlur] - An handler for the button blur
 * @property {Button.ButtonThemeProps} [themeOverride] - Overwrite the default ButtonThemeProps
 * @property {boolean} [roundCorners] - If set, it renders the button with round corners
 * @property {string} [title] - An optional title for the button
 * @property {Button.ButtonThemeProps} [theme.Button] - theme
 */
export interface ButtonProps {
    className?: string;
    disabled?: boolean;
    onClick?: (e?: React.SyntheticEvent<any>) => void;
    onBlur?: React.FocusEventHandler<any>;
    themeOverride?: ButtonThemeProps;
    innerRef?: any;
    roundCorners?: boolean;
    title?: string;
}
/**
 * @classdesc This component renders a button
 * @param {ButtonProps} ButtonProps - props
 * @extends {React.PureComponent}
 */
export declare class Button extends React.PureComponent<ButtonProps, undefined> {
    static displayName: string;
    render(): JSX.Element;
    static defaultProps: Partial<ButtonProps>;
}
