/// <reference types="loglevel" />
/**
 * @typedef {"Bubble" | "Line" | "Boxed"} InputAreaStyle - Represents the style of the input area.
 */
export declare type InputAreaStyle = "Bubble" | "Line" | "Boxed";
/**
 * @typedef {"Rounded" | "Squared" | "Minimal"} MessageStyle - Represents the style of a message.
 */
export declare type MessageStyle = "Rounded" | "Squared" | "Minimal";
/**
 * Callback to override message rendering. This callback is invoked every time when
 * attributes or properties of the message change.
 *
 * @callback Frame#RenderMessageCallback
 * @param {Twilio.Chat.Message} message Twilio Chat Message instance. See {@link https://media.twiliocdn.com/sdk/js/chat/v1.0/docs/ Twilio Chat SDK}.
 * @param {Element} element DOM element representing the message. Modify as needed.
 */
/**
 * Chat member display configuration
 * @typedef {Object} Frame#MemberDisplayOptions
 * @property {String} [yourDefaultName] Default string shown for local user's name
 * @property {String} [theirDefaultName] Default string shown for remote user's name
 * @property {Boolean} [yourFriendlyNameOverride] Should the user's friendly name be displayed as name for this user's messages?
 * @property {Boolean} [theirFriendlyNameOverride] Should the user's friendly name be displayed as name for this other user's messages?
 */
export interface MemberDisplayOptions {
    yourDefaultName?: string;
    theirDefaultName?: string;
    yourFriendlyNameOverride?: boolean;
    theirFriendlyNameOverride?: boolean;
}
/**
 * Callback to return URL to the avatar picture for message sender/user.
 * @callback Frame#AvatarCallback
 * @return {String} URL to the avatar picture
 * @param {String} identity Identity of a user
 */
/**
 * Frame configuration options
 * @typedef {Object} Frame#FrameConfig
 * @property {String} [language] language code
 */
export interface FrameConfig {
    readonly language?: string;
    readonly logLevel?: log.LogLevelDesc;
}
export declare function setConfig(config: any): void;
export declare function current(): FrameConfig;
