import * as React from "react";
import { ThemeProps, Theme, StyledOtherComponent } from "./theme";
import { FlexBoxProperties } from "@twilio/frame-ui";
import { WorkerDirectoryProps } from "./WorkerDirectory";
import { IWorker, IQueue } from "../models";
export interface TransferClickPayload {
    mode: "WARM" | "COLD";
}
export interface WorkerItemProps extends ThemeProps {
    worker: IWorker;
    onTransferClick: (options: TransferClickPayload) => void;
    isWarmTransferEnabled?: boolean;
}
export declare class WorkerItem extends React.Component<WorkerItemProps> {
    render(): JSX.Element;
    private onWarmTransferClick;
    private onColdTransferClick;
}
export interface QueueItemProps extends ThemeProps {
    queue: IQueue;
    onTransferClick: (options: any) => void;
    isWarmTransferEnabled?: boolean;
}
export declare class QueueItem extends React.Component<QueueItemProps> {
    render(): JSX.Element;
    private onWarmTransferClick;
    private onColdTransferClick;
}
export declare const CallButton: StyledOtherComponent<{}, import("@twilio/frame-ui").IconButtonProps, Theme>;
export declare const QueueTitleContainer: StyledOtherComponent<{}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Theme>;
export declare const Container: StyledOtherComponent<ThemeProps, FlexBoxProperties, Theme>;
export declare const ButtonContainer: StyledOtherComponent<{}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Theme>;
export declare const PopupContainer: StyledOtherComponent<WorkerDirectoryProps, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Theme>;
export declare const HeaderPanel: StyledOtherComponent<{}, FlexBoxProperties, Theme>;
export declare const LabelContainer: StyledOtherComponent<{}, FlexBoxProperties, Theme>;
export declare const Label: StyledOtherComponent<{}, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Theme>;
export declare const ItemContainer: StyledOtherComponent<{}, FlexBoxProperties, Theme>;
