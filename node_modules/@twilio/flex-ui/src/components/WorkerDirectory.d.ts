import * as React from "react";
import { AppState } from "../state";
import { DynamicContentStore } from "@twilio/frame-ui";
import { ThemeProps } from "./theme";
import { IWorker, ITask, IQueue } from "../models";
export interface WorkerDirectoryProps extends ThemeProps {
    isOpen?: boolean;
    task?: ITask;
    isWarmTransferEnabled?: boolean;
}
export interface WorkerDirectoryState {
    workers: Array<IWorker>;
    queues: Array<IQueue>;
}
export declare class WorkerDirectory extends React.PureComponent<WorkerDirectoryProps> {
    static readonly friendlyName = "WorkerDirectory";
    static readonly displayName = "WorkerDirectory";
    static readonly Content: DynamicContentStore;
    static defaultProps: Partial<WorkerDirectoryProps>;
    render(): JSX.Element;
}
export declare const mapStateToProps: (store: AppState) => WorkerDirectoryProps;
export declare class WorkerDirectoryImpl extends React.PureComponent<WorkerDirectoryProps, WorkerDirectoryState> {
    private workersSearch;
    private queuesSearch;
    private _queueSearchInputElement;
    private _workerSearchInputElement;
    private queueSearchTimer;
    private workerSearchTimer;
    constructor(props: WorkerDirectoryProps);
    componentDidMount(): void;
    componentDidUpdate(): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
    private compareWorkersFunction;
    private compareQueuesFunction;
    private setSearchInputRef;
    private onSearchInputChange;
    private setSearchQueuesInputRef;
    private onSearchQueuesInputChange;
    private onCloseClick;
    private onTransferQueueClick;
    private onTransferClick;
    private initOrUnInit;
    private onWorkerItemsUpdated;
    private onQueueItemsUpdated;
    private unInit;
}
