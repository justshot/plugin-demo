import * as React from "react";
import { DynamicContentStore } from "@twilio/frame-ui";
import * as AppConfig from "../../state/AppConfig";
import { TaskListProps } from "./TaskList";
import { ITask } from "../../models";
import { ThemeProps } from "../theme";
export interface TaskListProps {
    selectedTaskSid?: string;
    compareFunction?: (a: ITask, b: ITask) => number;
    staticFilter?: AppConfig.TaskFilterCallback;
    filters?: Array<AppConfig.TaskFilter>;
    onFilterChange?: (filter: AppConfig.TaskFilter) => void;
    onTaskSelected?: (sid: string) => void;
    tasks?: Map<string, ITask>;
}
export interface TaskListState extends TaskListProps {
    selectedFilter?: AppConfig.TaskFilter;
}
export declare const TaskListContext: React.Context<TaskListState>;
export declare class TaskList extends React.PureComponent<Partial<TaskListProps> & ThemeProps, undefined> {
    static readonly displayName = "TaskList";
    static readonly Content: DynamicContentStore;
    static readonly IncludeAllFilter: AppConfig.TaskFilter;
    static readonly defaultProps: {
        compareFunction: (a: ITask, b: ITask) => number;
    };
    static updateAll(): void;
    render(): JSX.Element;
}
