import * as React from "react";
import { DynamicContentStore } from "@twilio/frame-ui";
import { TaskContextProps } from "../context/TaskContext";
import { PropsWithTheme, ThemeProps } from "../theme";
export declare type TaskListItemSize = "Small" | "Large" | "LargeSelected";
export interface TaskListItemProps extends PropsWithTheme<TaskContextProps> {
    readonly visible?: boolean;
    readonly selected?: boolean;
    readonly selectedTaskSid?: string;
    readonly onSelected?: (taskSid: string) => void;
    readonly icon?: string | React.ReactNode;
    readonly iconColor?: string;
    readonly actions?: Array<React.ReactElement<any>>;
    readonly firstLine?: React.ReactNode;
    readonly secondLine?: React.ReactNode;
    readonly extraInfo?: React.ReactNode;
    readonly large?: boolean;
    readonly itemSize?: TaskListItemSize;
}
export declare class TaskListItem extends React.PureComponent<Partial<TaskListItemProps> & ThemeProps, undefined> {
    static displayName: string;
    static readonly Content: DynamicContentStore;
    static updateAll(): void;
    static readonly defaultProps: {
        itemSize: string;
    };
    render(): JSX.Element;
}
