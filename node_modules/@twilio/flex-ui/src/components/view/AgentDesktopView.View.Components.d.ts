import * as React from "react";
import { DynamicContentStore, FlexBoxProperties } from "@twilio/frame-ui";
import { ThemeProps, Theme, StyledOtherComponent } from "../theme";
import { AgentDesktopViewProps } from "./AgentDesktopView";
export interface ContentSplitterProps {
    vertical: boolean;
}
export declare class ContentSplitter extends React.PureComponent<ContentSplitterProps, undefined> {
    private splitter;
    private static lastSplitterState;
    componentDidMount(): void;
    componentWillUnmount(): void;
    private handleSplitterNeedsUpdate;
    render(): JSX.Element;
    private makeSplitterRef;
}
export declare const LeftPanelRootContainer: StyledOtherComponent<AgentDesktopViewProps, React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>, Theme>;
export declare class Panel1 extends React.Component<AgentDesktopViewProps & ThemeProps> {
    private container;
    private static readonly friendlyName;
    static readonly displayName = "AgentDesktopView.Panel1";
    static readonly Content: DynamicContentStore;
    componentDidMount(): void;
    componentWillUnmount(): void;
    private handleResize;
    private handleParentSplitterChange;
    render(): JSX.Element;
    private makeInnerRef;
    private handleTaskSelected;
}
export declare const RightPanelRootContainer: StyledOtherComponent<{}, FlexBoxProperties, Theme>;
export declare class Panel2 extends React.PureComponent<AgentDesktopViewProps> {
    private static readonly friendlyName;
    static readonly displayName = "AgentDesktopView.Panel2";
    static readonly Content: DynamicContentStore;
    render(): JSX.Element;
}
